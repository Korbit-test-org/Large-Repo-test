# Generated by Django 2.0.4 on 2018-05-26 08:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_alert', models.EmailField(blank=True, max_length=100)),
                ('telegram_id', models.CharField(blank=True, help_text='Telegram ID', max_length=10)),
                ('webhook', models.URLField(blank=True, help_text='URL to send message into Slack.')),
                ('delay_check', models.IntegerField(default=10, help_text='unit: minute')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=45)),
                ('ip_address', models.GenericIPAddressField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('hostname',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(choices=[('HTTP', 'http'), ('PING', 'ping')], max_length=45)),
                ('ok', models.IntegerField(blank=True, null=True)),
                ('warning', models.IntegerField(blank=True, null=True)),
                ('critical', models.IntegerField(blank=True, null=True)),
                ('interval_check', models.IntegerField(blank=True, null=True)),
                ('host', models.ManyToManyField(to='check.Host')),
            ],
            options={
                'ordering': ('service_name',),
            },
        ),
    ]
